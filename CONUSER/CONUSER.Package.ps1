#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 6e0bba5b-f5fb-44ec-a754-5af72bc4af7d
# Source File: D:\Arismendys\Documents\SAPIEN\PowerShell Studio\Projects\CONUSER\CONUSER.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
SwIAAB+LCAAAAAAABACFUkFPgzAYvS/ZfyA9mjC2BdxhXQ86MTu4mTG9mlI+pFpaUsrc/PUWyswW
NV6+r6883st7gLfA1B70cUkNJcOB5+FHrd6AGS85SlZoJfknZAsUU1ED6i5jLgzoBboaVfVk3s7S
rcytyaEU3SHvZm2nuylAVCNzMKgzslbPoGuuJJmOJjg4gf6ZdYHVklzDOE1plPp5lKd+GALz6SwK
/Yjms2nKQrsyHPTk/tU+we5YARnj4ByexJXIrJ0XnLvVPeihd9NwYZOPEUkM1aap2jDO6y+mlxRU
t3XtdGPb2kIOGiSDuJHM2HALtJJ79Q7+vVApFS+2LETcuW6b+0f9F72kUB/+A+UyVrq0ejkiJ9R+
gQtBB1zM71oc2mj+yiUVLWFNSyC3m/VTcre1GpXl4eAHYTjAwcXP8wVXHY9jSwIAAA==#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2020 v5.7.172
     Generated on:       8/7/2024 6:23 p. m.
     Generated by:       Arismendys
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2020
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}


#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
AAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formCONUSER = New-Object 'System.Windows.Forms.Form'
	$combobox1 = New-Object 'System.Windows.Forms.ComboBox'
	$panel1 = New-Object 'System.Windows.Forms.Panel'
	$txtUsuario = New-Object 'System.Windows.Forms.TextBox'
	$labelUsuario = New-Object 'System.Windows.Forms.Label'
	$btnTaskkill = New-Object 'System.Windows.Forms.Button'
	$statusstrip1 = New-Object 'System.Windows.Forms.StatusStrip'
	$progressbar = New-Object 'System.Windows.Forms.ToolStripProgressBar'
	$Servers = New-Object 'System.Windows.Forms.ToolStripStatusLabel'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formCONUSER_Load = {
		$Servers.Text = "Buscando en:"
		$progressbar.Text = "Buscando en:"
		$progressbar.Maximum = 180
		$combobox1.SelectedIndex = 0
		#$txtUsuario.Focus()
		$lbServidores.Visible = $false
	}
	$txtUsuario_KeyPress = [System.Windows.Forms.KeyPressEventHandler]{
		#Event Argument: $_ = [System.Windows.Forms.KeyPressEventArgs]
		#TODO: Place custom script here
		if ($_.KeyChar -eq 13)
		{
			$btnTaskkill.PerformClick()
		}
	}
	$btnTaskkill_Click={
		#TODO: Place custom script here
	#	if ($combobox1.Text -eq "Elegir opción")
	#	{
	#		[System.Windows.Forms.MessageBox]::Show("Debe elegir una opción para poder continuar.", '', 'OK', 'Exclamation')
	#		$combobox1.Focus()
	#	}
	#	else
	#	{
	#		if ($combobox1.Text -eq "Sisme")
	#		{
	#			if ($txtUsuario.Text -eq '')
	#			{
	#				[System.Windows.Forms.MessageBox]::Show("Debe especificar un nombre de usuario.", '', 'OK', 'Exclamation')
	#				$txtUsuario.Focus()
	#			}
	#			else
	#			{
	#				#$servidores = @("sisserverctrx01", "sisserverc")
	#				$servidores = @("sisserver01", "sisserver02", "sisserver03", "sisserver04", "sisserver06", "sisservera", "sisserverb", "sisserverc", "sisserverctrx01", "sisserverctrx02", "sisserverctrx03", "sisserverctrx04", "sisserverctrx05", "sisserverctrx06", "sisserverctrx07", "sisserverctrx08", "sisserverctrx09", "sisserverctrxA", "sisserverctrxB", "sisserverctrxC")
	#				$usuario = $txtUsuario.Text
	#				foreach ($servidor in $servidores)
	#				{
	#					$progressbar.Value += 10
	#					$Servers.Text = "Buscando en: $servidor"
	#					$result = query session $usuario /SERVER:$servidor | select -skip 1 | %{ $_.Split(' ', [System.StringSplitOptions]::RemoveEmptyEntries) }
	#					If ($result)
	#					{
	#						#[System.Windows.Forms.MessageBox]::Show("El usuario ( $usuario ), está conectado al servidor ($servidor), con el ID: " + $result[2], "", 'OK', 'Information')
	#						$msg = "¿Desea cerrar sismenet para el usuario ( $usuario ) en el servidor: $servidor."
	#						if ([System.Windows.Forms.MessageBox]::Show($msg, '', 'YesNo', 'Question') -eq 'Yes')
	#						{
	#							try
	#							{
	#								taskkill /S $servidor /F /FI "USERNAME eq COLONIAL\$usuario" /IM sismenet.exe
	#								[System.Windows.Forms.MessageBox]::Show("La sesión del Sismenet para el usuario ( $usuario ) en el servidor $servidor se ha cerrado con exito.", "", 'OK', 'Exclamation')
	#							}
	#							catch
	#							{
	#								[System.Windows.Forms.MessageBox]::Show("Error de ejecución: $($_.exception.message)", "", 'OK', 'Error')
	#							}
	#						}
	#					}
	#					else
	#					{
	#						$noencontrado = $noencontrado + " - " + $Servidor
	#						#[System.Windows.Forms.MessageBox]::Show("No se pudo encontrar al usuario (" + $Usuario.Text + ") en el servidor: $servidor", "", 'OK', 'Exclamation')
	#					}
	#				}
	#			}
	#		}
	#		else
	#		{
	#			if ($combobox1.Text -eq "Servidor")
	#			{
					if ($txtUsuario.Text -eq '')
					{
						[System.Windows.Forms.MessageBox]::Show("Debe especificar un nombre de usuario.", '', 'OK', 'Exclamation')
						$txtUsuario.Focus()
					}
					else
					{
						#$servidores = @("sisserverctrx01", "sisserverc")
						$servidores = @("sisserver01", "sisserver02", "sisserver03", "sisserver04", "sisserver06", "sisservera", "sisserverb", "sisserverc", "sisserverctrx01", "sisserverctrx02", "sisserverctrx03", "sisserverctrx04", "sisserverctrx05", "sisserverctrx06", "sisserverctrx07", "sisserverctrx08", "sisserverctrx09", "sisserverctrxA", "sisserverctrxB", "sisserverctrxC")
						$usuario = $txtUsuario.Text
						foreach ($servidor in $servidores)
						{
							$progressbar.Value += 10
							$Servers.Text = "Buscando en: $servidor"
							$result = query session $usuario /SERVER:$servidor | select -skip 1 | %{ $_.Split(' ', [System.StringSplitOptions]::RemoveEmptyEntries) }
							If ($result)
							{
								#[System.Windows.Forms.MessageBox]::Show("El usuario ( $usuario ), está conectado al servidor ($servidor), con el ID: " + $result[2], "", 'OK', 'Information')
								$idusuario = $result[2]
								$msg = "¿Desea cerrar la sesión del usuario ( $usuario ) en el servidor: $servidor."
								if ([System.Windows.Forms.MessageBox]::Show($msg, '', 'YesNo', 'Question') -eq 'Yes')
								{
									try
									{
										logoff $idusuario /server:$servidor
										#taskkill /S $servidor /F /FI "USERNAME eq COLONIAL\$usuario" /IM sismenet.exe
										[System.Windows.Forms.MessageBox]::Show("La sesión del usuario ( $usuario ) en el servidor $servidor se ha cerrado con exito.", "", 'OK', 'Exclamation')
									}
									catch
									{
										[System.Windows.Forms.MessageBox]::Show("Error de ejecución: $($_.exception.message)", "", 'OK', 'Error')
									}
								}
							}
							else
							{
								$noencontrado = $noencontrado + " - " + $Servidor
								#[System.Windows.Forms.MessageBox]::Show("No se pudo encontrar al usuario (" + $Usuario.Text + ") en el servidor: $servidor", "", 'OK', 'Exclamation')
							}
						}
					}
	#			}
				
	#		}
			if ($progressbar.Value -eq 180)
			{
				#[System.Windows.Forms.MessageBox]::Show("El sistema termino de buscar al usuario (" + $Usuario.Text + ") en los servidores: $servidores", "", 'OK', 'Information')
				[System.Windows.Forms.MessageBox]::Show("El sistema termino de buscar al usuario ( $usuario ) en todos los servidores, y no se pudo encontrar al usuario en los servidores:`n`n$noencontrado", "", 'OK', 'Exclamation')
				$txtUsuario.Clear()
				$Servers.Text = "Buscando en:"
				$progressbar.Value = 0
				$combobox1.SelectedIndex = 0
				$combobox1.Focus()
				#$txtUsuario.Focus()
			}
	#	}
	}
	
	#region Control Helper Functions
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]
			$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
		$ComboBox.ValueMember = $ValueMember
	}
	
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]
			$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ListBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$ListBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ListBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ListBox.Items.Add($obj)
			}
			$ListBox.EndUpdate()
		}
		else
		{
			$ListBox.Items.Add($Items)
		}
		
		$ListBox.DisplayMember = $DisplayMember
		$ListBox.ValueMember = $ValueMember
	}
	#endregion
	
	
	$combobox1_SelectedIndexChanged={
		#TODO: Place custom script here
	
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formCONUSER.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_combobox1 = $combobox1.Text
		$script:MainForm_combobox1_SelectedItem = $combobox1.SelectedItem
		$script:MainForm_txtUsuario = $txtUsuario.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$combobox1.remove_SelectedIndexChanged($combobox1_SelectedIndexChanged)
			$txtUsuario.remove_KeyPress($txtUsuario_KeyPress)
			$btnTaskkill.remove_Click($btnTaskkill_Click)
			$formCONUSER.remove_Load($formCONUSER_Load)
			$formCONUSER.remove_Load($Form_StateCorrection_Load)
			$formCONUSER.remove_Closing($Form_StoreValues_Closing)
			$formCONUSER.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formCONUSER.SuspendLayout()
	$panel1.SuspendLayout()
	$statusstrip1.SuspendLayout()
	#
	# formCONUSER
	#
	$formCONUSER.Controls.Add($combobox1)
	$formCONUSER.Controls.Add($panel1)
	$formCONUSER.Controls.Add($statusstrip1)
	$formCONUSER.AutoScaleDimensions = '6, 13'
	$formCONUSER.AutoScaleMode = 'Font'
	#region Binary Data
	$formCONUSER.BackgroundImage = [System.Convert]::FromBase64String('
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
YII=')
	#endregion
	$formCONUSER.BackgroundImageLayout = 'Stretch'
	$formCONUSER.ClientSize = '361, 289'
	$formCONUSER.FormBorderStyle = 'FixedSingle'
	#region Binary Data
	$formCONUSER.Icon = [System.Convert]::FromBase64String('
AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAA
AIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAN
AAAAFAAAABYAAAAWAAAAFgAAABQAAAANAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAIAAAAJAAAAGwAAADEAAAA/AAAAQwAAAEMAAABDAAAAPwAAADEAAAAbAAAACQAAAAIAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAACQAAACMaFhNIgnBdxJWAaf+Ufmj/k35o/5R+aP+Vf2n/gXBdxBoWE0gA
AAAiAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASZFdIc52Kcv/Ft6X/5+LW//Tw5P/z8OT/9PDk
/+fi1v/GuKf/nYpy/2BURnYAAAAjAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAW
AAAAFgAAABYAAAAVAAAADQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABafinT/2M+9/97Vwf/T
xq7/zsGn/87Ap//Owaf/08au/97Vwf/b0cH/n4t1/wAAAEgAAABDAAAAQwAAAEMAAABDAAAAQwAA
AEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAD8AAAArAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
EqKOeP/JuqL/wK+U/76skf+9q5D/vauQ/72rkP++rJH/wK+U/8m6of+ijXf/lYBp/5WAaf+VgGn/
lYBp/5WAaf+VgGn/lYBp/5WAaf+VgGn/lYBp/5WAaf+VgGn/loJq/4l3YsQAAAAVAAAABAAAAA0A
AAAVAAAAFgAAABYAAAAep5N+/7Kegf+wm37/2s+2/+Tcy//k28r/5NzL/9rPtv+wm37/sZyA/6eT
ff/RxrL/0MWw/9DFsP/QxbD/z8Sv/8/Er//PxK//z8Sv/8/Er//PxK//z8Sv/8/Er//UybT/mINr
/wAAABYAAAANAAAAKwAAAD8AAABDAAAAQwAAAERMQzprqJWA+KmSd//Pwqr/vKmI/7ypiP+8qYj/
z8Kq/6mSd/+umoT/xrik/9LGsv/QxLH/0MSx/9DEsP/Pwq//zcCs/8y/q//Mv6v/zL+r/8y/q//M
v6v/zcCs/9PItv+WgWv/AAAAFgAAABWJd2LEl4Ns/5WBa/+VgWr/lIBq/5SAaf+Tf2n/kn5n/5mG
cf+RfGb/kX1m/5F8Zv+ZhnH/kn5n/5J+aP+RfWb/kXxl/5B7Zf+Qe2X/kHtk/6eWgP/Owq3/y7+q
/8u/qv/Lv6n/y7+q/8u/qv/Lv6r/1cu4/5eCav8AAAAWAAAAFpeDbv/Rup3/x6+P/8atjv/FrY7/
xa2O/8Stjv/ErI3/xKyN/8Ssjf/ErI3/xKyN/8Ssjf/ErI3/xKyN/8Ssjf/ErI3/xa2N/8aujv/N
tJb/kXxm/8/Drv/Kvqn/yr6o/8q9qP/Kvqj/yr6o/8y/qv/Yzr3/mINr/wAAABYAAAAWmIRt/9K9
of/Z0b3/7Ozn/+vs6f/q7On/6uvp/+nq6f/p6un/6Orp/+jp6f/o6un/6erp/+nq6f/p6+n/6uzp
/+vs6f/s7Of/2dK9/824m/+SfWb/zsKt///98f/Hu6X///vw/8i7pf///fL/y7+p/9rQwP+YhGz/
AAAAFgAAABaZhG7/1sKo/9LLuP/hjiT/45Ee/+mYIv/tnSL/86Qi//eqIv/8sCP//7Mj//2xI//4
qyL/9KUi/+6gIv/qmSL/5pMg/+GJGf/SzLn/0b2i/5J9Zf////b/yLml///57v/HuaP///nu/8m7
pv/Mv6r/3NPE/5mFbf8AAAAWAAAAFpmFcP/ayLL/zMSz/+OVMf/nnjr/6J0v/+yhLv/xqC//9a0v
//qzMP/+uDD/+7Uw//avL//yqS//7qQv/+meL//lmCz/4Y8j/8zFtf/Xw6r/kn1n/87BrP//+u7/
x7mk///57f/IuqX///vw/82/q//e1sf/moZt/wAAABYAAAAWnIdw/9/Puf/Hvqz/4pUy/+WgQf/q
pkT/7KU3//CmMP/zrDH/97Ax//qyM//3sTP/9K0y//GoMv/sozL/6J4y/+SYL//hjyX/x7+u/9rJ
sv+VgGj////1/8q8p///+e3/ybum///57v/Lvaj/zsCs/+HYyv+ahW7/AAAAFgAAABaciHL/5NXB
/8G3pP/hkTD/4549/+imRf/urE3/76xF//GpM//zqi//9Kww//OsMP/xqTH/7qUx/+uhMf/nnDD/
4pYu/+CNJP/Bt6b/39C6/5eBa//SxbD///zx/8y+qf//++//zL6p///88P/Pwq3/49zO/5uGb/8A
AAAWAAAAFp2Jc//o3Mn/vLGd/9+OLv/hmTz/5qFC/+qoSf/tr0//8LRV//G1U//xr0T/8Ks7/+yi
LP/roC3/55ss/+OXK//fkSn/34kh/7ywnP/k1sH/mINt/9XHtP/Rwq//0MKu/9DBrv/Qwq//0MGu
/9HCr//n3tL/nIdw/wAAABYAAAAWn4t1/+3i0P+3qZX/3Iws/9+XOv/jnUD/56NF/+qpS//srVH/
7rJX/++1Xf/vuGL/8Llo/++6bv/rtmr/67Zu/+u5eP/qtXP/tqeS/+ncyf+bhW//18q2/9XGs//U
xbH/1MWx/9TGsP/Uxq//0sWv/+jg1f+diHH/AAAAFgAAABagi3X/8unY/7Gjjv/ahin/3JI4/+CZ
P//jn0P/5qRI/+ioTf/qrFL/669X/+uxXf/rsmL/67Rm/+q0bP/ptXH/6LNz/+mvb/+woIj/7uHQ
/52GcP/dzLn/48q6/+PKuP/fy7T/4tCv/+DPrv/Yya//6+XY/56Icv8AAAAWAAAAFqGMd//47t//
rJyG/9aCJ//YjjX/3JQ9/+CaQf/in0b/5KNL/+amUP/nqVX/6Kxa/+itX//nrmP/569o/+awbf/m
r3H/5q1u/6uYgP/y6Nf/n4hz/+bMvv8Aij7/AIs9/+/Rtv8AGOf/ABfm/9/Orv/u5tr/n4lz/wAA
ABYAAAAWo453//v05/+nln7/030m/9aHMv/Zjzn/3ZQ+/9+ZRf/inUj/46FN/+SkU//lplj/5ahd
/+WpYv/krGb/5Ktr/+StcP/lrG7/ppJ4//fu3/+hinP/5s2//wDFUv8AxVH/7NC2/3lm//92Zf//
3s2u//Do3v+fiXP/AAAAFgAAABakjnn///ru/6KNc//TeSD/1H8p/9eGMP/cjTX/3ZE7/+GXQf/i
mkb/451M/+ShUf/ko1b/5KVb/+SmYf/kp2b/5Kls/+apbf+him///PXm/6GLdv/gzr7/5s3A/+bM
v//hzrr/4NG0/9/Qs//ZyrL/8Ovg/6CKdP8AAAAWAAAAFaaQev////X/mYBh/5uGaf+bh2z/moZs
/5qGa/+ahWv/moVq/5mEav+ZhGn/mYRp/5mDaP+Zg2j/mYNn/5mDZ/+ag2b/moJk/5l/X///+Oz/
o413/8Sri//Eqov/w6mK/8Kqiv/Cqoj/waiG/9jKtv/y7OT/oIt0/wAAABYAAAANqJN9////9///
//T////2////9v////b////2////9v////b////2////9v////b////2////9v////b////2////
9v////X////0///+8/+ijXf/waiH/7+nhv+/pob/v6aG/7+mhf++pYP/2Mq2//Tv6P+hjHX/AAAA
FgAAAASlkX2zp5J8/8/Crf/Nwav/zcCr/83Aq//NwKv/zcCr/83Aq//NwKv/zcCr/83Aq//NwKv/
zcCq/8zAqv/MwKr/zcCq/83Aq//Nwaz/pI54/8a5q////f3//fv6//z6+v/8+vr//Pr6//36+v/X
yLX/9vDq/6KNdv8AAAAWAAAAAAAAAASplYGwrZmD/6yXgv+sl4L/rJeC/6yXgv+sl4L/rJeC/6yX
gv+sl4L/rJeC/6yXgv+rloD/qJN9/6iTfv+qlID/qpaB/6qWgf+9q5j/3tG+/9vNuv/ZzLn/2cu4
/9nLuP/Zy7j/2cu4/9jJtv/39Oz/o453/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFqWQeP/8+fT/39G+/8Oriv/ErY3/xK2N/8SrjP/C
qor/waiJ/8Goif/BqIn/waiJ/8CoiP+/poX/2sy5//n18P+kj3j/AAAAFgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWpI95//z48//bzLr/vqWE
/7+nhv+/p4b/v6eG/7+mhv+/pob/v6aG/7+mhv+/pob/v6aF/76kg//by7n/+/fy/6SPef8AAAAW
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABal
kHn/+/j0/9rKtv/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4/9rK
tv/7+PT/pZB5/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAFaaRe//8+vf/2sq2/9rJtf/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/aybX/
2sm1/9rJtf/aybX/2sq2//z69/+mkXv/AAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqZR9/////f/9+vf//Pn1//z59f/8+fX//Pn1//z5
9f/8+fX//Pn1//z59f/8+fX//Pn1//z59f/9+vf////9/6mUff8AAAANAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASmkn6zqZN9/87Bq//MwKn/
zL+p/8y/qf/Mv6n/zL+p/8y/qf/Mv6n/zL+p/8y/qf/Mv6n/zMCp/87Bq/+pk33/ppJ+swAAAAQA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AASplYGwrZiD/6yXgv+sl4L/rJeC/6yXgv+sl4L/rJeC/6yXgv+sl4L/rJeC/6yXgv+sl4L/rZiD
/6mVgbAAAAAEAAAAAP4A///4AD//+AA///gAAAD4AAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAD/
+AAA//gAAP/4AAD/+AAA//gAAP/4AAD//AABKAAAABAAAAAgAAAAAQAgAAAAAABABAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAAzAAAAMwAAADMAAAAzAAAAGgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDcl6fmYVu/5iEbf+YhG3/mYRu/4FwXZoAAAAz
AAAAMwAAADMAAAAzAAAAMwAAADMAAAAjAAAAIwAAADMAAAAzpZJ8/7iihP/LvaX/y72l/7mkiP+l
knz/mINs/5iEbf+Xg2z/loFq/5WAaf+WgWr/i3lkwJB+acCbh3D/mYRt/5eCbP+WgGv/lH9p/5R/
af+WgGv/l4Js/5mEbv+ahm//sJ+J/9HHsv/QxLD/1cq3/5mEbP+einP/zbib//P58f/w9/H/7vbx
/+718f/u9fH/7vbx//D38f/z+fL/yraa/5mEbf/QxbD/zsKt/9fNuv+Yg23/nop2/9HDrf/kkCH/
65gg//SkIv/9sCP//7Mj//aoIv/tnCH/5Y4a/8+/qv+bhnH/1Maz/9HDr//b0cH/moVu/6CMeP/W
z77/45Qv/+ihN//vpS//9q0s//euLP/xpyv/6Zwp/+KOH//Vyrj/ooh1/+PKuv/gx7b/5dfJ/5yH
b/+ijnn/3trL/9+OK//moUD/7q5O//GxTf/xtlX/77Zc/+yzYf/stnL/3NTD/6yLev8AjkL/AIs+
//Ld0/+eh3L/o496/+Xl2P/YhCT/4Jc5/+akRf/qq0//7LBZ/+uyYv/ps2r/6K5r/+Lczf+tjHv/
AMlX/wDFU//14dn/oIlz/6WRfP/s7+P/0HUW/9mGKf/ekjX/45o+/+WgSP/lo1L/5KVc/+OkYf/n
5tb/p416/8mlkv/GoY7/8eXc/6GLdP+plH//8/fq//D27P/v9u7/7/bu/+717f/u9Oz/7vTr/+7z
6f/u8+f/7/Dj/6WOef/14tT/8d7Q/+/o3/+hi3b/rZmEsKuWgf+qlYD/qZWA/6mVgP+plID/qZSA
/6eSff+lj3n/pI54/6SPef+xnIb/uaGJ/7aehf/y7OP/o412/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAClj3j/9/Lr/+7czP/u3M3/7t3N/+3czP/s2sr/9PDo/6WPeP8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAppB6//j07f/ay7f/2su4/9rLuP/ay7f/2sq3//jz7P+lkHr/AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKmUfv/++/X/+/by//v28v/79vL/+/by//v28v/++/X/qZR+
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtmYOwqpV//6mTff+ok33/qJN9/6iTff+pk33/
qpV//62Zg7DgfwAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+
AAAA/gAAAP4AAAD+AAAA')
	#endregion
	$formCONUSER.Margin = '8, 7, 8, 7'
	$formCONUSER.MaximizeBox = $False
	$formCONUSER.Name = 'formCONUSER'
	$formCONUSER.StartPosition = 'CenterScreen'
	$formCONUSER.Text = 'CONUSER'
	$formCONUSER.add_Load($formCONUSER_Load)
	#
	# combobox1
	#
	$combobox1.AutoCompleteSource = 'ListItems'
	$combobox1.DropDownStyle = 'DropDownList'
	$combobox1.Enabled = $False
	$combobox1.FormattingEnabled = $True
	[void]$combobox1.Items.Add('Elegir opción')
	[void]$combobox1.Items.Add('Sisme')
	[void]$combobox1.Items.Add('Servidor')
	$combobox1.Location = '376, 60'
	$combobox1.Name = 'combobox1'
	$combobox1.Size = '118, 21'
	$combobox1.TabIndex = 0
	$combobox1.Visible = $False
	$combobox1.add_SelectedIndexChanged($combobox1_SelectedIndexChanged)
	#
	# panel1
	#
	$panel1.Controls.Add($txtUsuario)
	$panel1.Controls.Add($labelUsuario)
	$panel1.Controls.Add($btnTaskkill)
	$panel1.Anchor = 'Top, Left, Right'
	$panel1.Location = '0, -5'
	$panel1.Name = 'panel1'
	$panel1.Size = '362, 38'
	$panel1.TabIndex = 7
	#
	# txtUsuario
	#
	$txtUsuario.Location = '62, 10'
	$txtUsuario.Margin = '2, 2, 2, 2'
	$txtUsuario.Name = 'txtUsuario'
	$txtUsuario.Size = '223, 20'
	$txtUsuario.TabIndex = 1
	$txtUsuario.add_KeyPress($txtUsuario_KeyPress)
	#
	# labelUsuario
	#
	$labelUsuario.Font = 'Microsoft Sans Serif, 8.25pt, style=Bold'
	$labelUsuario.Location = '8, 8'
	$labelUsuario.Name = 'labelUsuario'
	$labelUsuario.Size = '53, 23'
	$labelUsuario.TabIndex = 11
	$labelUsuario.Text = 'Usuario:'
	$labelUsuario.TextAlign = 'MiddleCenter'
	$labelUsuario.UseCompatibleTextRendering = $True
	#
	# btnTaskkill
	#
	#region Binary Data
	$btnTaskkill.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlz
AAAOvQAADr0BR/uQrQAAApZJREFUOE+NkWtIU3EYhw8V1IeCqD5E1EZgEiqJNWdZNtnIVpbmjWof
siDCD1YYFlHTlZJh5TZvHSejo+3WxsTaJcfm2Tojx7xMh7bphpuEF1iU1VDrQ/l2zjqUQWYPPJwX
fr/35Q8H+RscJnNdwWHWLQEv1SPgsgMCHlvKS929mY5XppibYslNS4T8A0m/Td/j53CQNXRleTLi
GTtL+CzQVRWDpDQPCg8mQw47EU6SsuMYCXRtefYnbN+kvnvh+zuiCSinbBIYUIngTOa+xVQmcytd
+zdWmRCfHXwGS624mN9Pxyvj6ZLnRAM4LLW5ojSbjldGV1S0en5qaGRhehgo5ya9LpFItIqO/49P
fvODhSkvzJN+HLUVPJfLN5hMJr7RaEyiK8vT3EnsmB3FI9FAN/n8bngfdHqDwcDbcDjcMz4+PhEK
hWrp6p/EXa5fm4+9rhQSM3NP/XOAj06CndQ9EgDb8MRXdzjiic5/qfP5fNMymYxBr/3k0D1tQnar
w3e81QmnsD44r/fDDfsMXMdnoMM5CBjxBuodY9DeG/rc0zcwjaJoMr2KIPGXRFs4ElOE22iFYzIC
crFeKFJ5QaDzx7zd2Q9m3AkY7gGF1QV6K7F4VqrfRa8jyN4q7dX0hy8gs94CWagDTshdkNc+AIXK
oZjUfEVJQJ3OApXKl8Bv6IISw5j5159JqdZeS6vthAyxGXiNNuC3EOSRHsh54o5JzfyWV7GM6rBq
9B94DdbFEkNAGDsgatKtv4lqys81dYSzpOZvXLKY9dgOR8klSmqmFvIajQtlqM5QLdOknxZryo80
2+/HDqjV6m1KpVJAWq5QKKrRNpXkUZtWUoNppZTiNo1E3q4Sk9kdslNGfgsxDNuIIAjyA5SnlMNk
sVtGAAAAAElFTkSuQmCC')
	#endregion
	$btnTaskkill.ImageAlign = 'TopCenter'
	$btnTaskkill.Location = '290, 10'
	$btnTaskkill.Name = 'btnTaskkill'
	$btnTaskkill.Size = '67, 21'
	$btnTaskkill.TabIndex = 2
	$btnTaskkill.Text = 'Buscar'
	$btnTaskkill.TextImageRelation = 'ImageBeforeText'
	$btnTaskkill.UseCompatibleTextRendering = $True
	$btnTaskkill.UseVisualStyleBackColor = $True
	$btnTaskkill.add_Click($btnTaskkill_Click)
	#
	# statusstrip1
	#
	$statusstrip1.Enabled = $False
	$statusstrip1.ImageScalingSize = '36, 36'
	[void]$statusstrip1.Items.Add($Servers)
	[void]$statusstrip1.Items.Add($progressbar)
	$statusstrip1.Location = '0, 267'
	$statusstrip1.Name = 'statusstrip1'
	$statusstrip1.Size = '361, 22'
	$statusstrip1.TabIndex = 4
	$statusstrip1.Text = 'statusstrip1'
	#
	# progressbar
	#
	$progressbar.Name = 'progressbar'
	$progressbar.Size = '150, 16'
	$progressbar.Step = 12
	#
	# Servers
	#
	$Servers.DisplayStyle = 'Text'
	$Servers.Font = 'Segoe UI, 8pt'
	$Servers.Name = 'Servers'
	$Servers.Size = '113, 17'
	$Servers.Text = 'toolstripstatuslabel1'
	$statusstrip1.ResumeLayout()
	$panel1.ResumeLayout()
	$formCONUSER.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formCONUSER.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formCONUSER.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formCONUSER.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formCONUSER.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formCONUSER.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
